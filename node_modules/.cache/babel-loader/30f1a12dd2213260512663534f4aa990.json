{"ast":null,"code":"var _jsxFileName = \"/home/arush/Desktop/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React from 'react';\nimport './SortingVisualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 310; i++) {\n      array.push(random(5, 400));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-bar\",\n        style: {\n          height: `${value}px`\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"sources":["/home/arush/Desktop/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","random","setState","render","map","value","idx","height","min","max","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;;AAEA,eAAe,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAA+C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL;AACH;;AAEDA,EAAAA,UAAU,GAAE;AACR,UAAMF,KAAK,GAAG,EAAd;;AACA,SAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,GAAnB,EAAwBA,CAAC,EAAzB,EAA4B;AACxBH,MAAAA,KAAK,CAACI,IAAN,CAAWC,MAAM,CAAC,CAAD,EAAG,GAAH,CAAjB;AACH;;AACD,SAAKC,QAAL,CAAc;AAACN,MAAAA;AAAD,KAAd;AACH;;AAEDO,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACP,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACKC,KAAK,CAACQ,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,kBACP;AAAK,QAAA,SAAS,EAAC,WAAf;AAAqC,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,GAAEF,KAAM;AAAjB;AAA5C,SAAgCC,GAAhC;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA9ByD;;AAiC9D,SAASL,MAAT,CAAgBO,GAAhB,EAAqBC,GAArB,EAA0B;AACtB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACT,MAAL,MAAeQ,GAAG,GAACD,GAAJ,GAAQ,CAAvB,IAA4BA,GAAvC,CAAP;AACH","sourcesContent":["import React from 'react';\nimport './SortingVisualizer.css'\n\nexport default class SortingVisualizer extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            array: []\n        };\n    }\n\n    componentDidMount(){\n        this.resetArray();\n    }\n\n    resetArray(){\n        const array = [];\n        for(let i = 0; i < 310; i++){\n            array.push(random(5,400));\n        }\n        this.setState({array});\n    }\n\n    render(){\n        const {array} = this.state;\n        return(\n            <div className='array-container'>\n                {array.map((value, idx) => (\n                    <div className='array-bar' key={idx} style={{height:`${value}px`}}>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nfunction random(min, max) {\n    return Math.floor(Math.random()*(max-min+1) + min);\n}"]},"metadata":{},"sourceType":"module"}